<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.corun.faultcheck.fault.check.dao.FaultInfoDao">
  <resultMap id="BaseResultMap" type="com.corun.faultcheck.fault.check.model.FaultInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="sheet_id" jdbcType="VARCHAR" property="sheetId" />
    <result column="image_id" jdbcType="VARCHAR" property="imageId" />
    <result column="start_point_x" jdbcType="BIGINT" property="startPointX" />
    <result column="start_point_y" jdbcType="BIGINT" property="startPointY" />
    <result column="width" jdbcType="BIGINT" property="width" />
    <result column="height" jdbcType="BIGINT" property="height" />
    <result column="fault_type" jdbcType="INTEGER" property="faultType" />
    <result column="data_type" jdbcType="INTEGER" property="dataType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="oper_person" jdbcType="VARCHAR" property="operPerson" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sheet_id, image_id, start_point_x, start_point_y, width, height, fault_type, 
    data_type, create_time, oper_person, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.corun.faultcheck.fault.check.model.FaultInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fault_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fault_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from fault_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.corun.faultcheck.fault.check.model.FaultInfoExample">
    delete from fault_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.corun.faultcheck.fault.check.model.FaultInfo" useGeneratedKeys="true">
    insert into fault_info (id, sheet_id, image_id, start_point_x,
      start_point_y, width, height, 
      fault_type, data_type, create_time, 
      oper_person, is_delete)
    values (#{id,jdbcType=VARCHAR}, #{sheetId,jdbcType=VARCHAR}, #{imageId,jdbcType=VARCHAR}, #{startPointX,jdbcType=BIGINT},
      #{startPointY,jdbcType=BIGINT}, #{width,jdbcType=BIGINT}, #{height,jdbcType=BIGINT}, 
      #{faultType,jdbcType=INTEGER}, #{dataType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operPerson,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.corun.faultcheck.fault.check.model.FaultInfo" useGeneratedKeys="true">
    insert into fault_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sheetId != null">
        sheet_id,
      </if>
      <if test="imageId != null">
        image_id,
      </if>
      <if test="startPointX != null">
        start_point_x,
      </if>
      <if test="startPointY != null">
        start_point_y,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="faultType != null">
        fault_type,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operPerson != null">
        oper_person,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sheetId != null">
        #{sheetId,jdbcType=VARCHAR},
      </if>
      <if test="imageId != null">
        #{imageId,jdbcType=VARCHAR},
      </if>
      <if test="startPointX != null">
        #{startPointX,jdbcType=BIGINT},
      </if>
      <if test="startPointY != null">
        #{startPointY,jdbcType=BIGINT},
      </if>
      <if test="width != null">
        #{width,jdbcType=BIGINT},
      </if>
      <if test="height != null">
        #{height,jdbcType=BIGINT},
      </if>
      <if test="faultType != null">
        #{faultType,jdbcType=INTEGER},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operPerson != null">
        #{operPerson,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.corun.faultcheck.fault.check.model.FaultInfoExample" resultType="java.lang.Long">
    select count(*) from fault_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fault_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.sheetId != null">
        sheet_id = #{record.sheetId,jdbcType=VARCHAR},
      </if>
      <if test="record.imageId != null">
        image_id = #{record.imageId,jdbcType=VARCHAR},
      </if>
      <if test="record.startPointX != null">
        start_point_x = #{record.startPointX,jdbcType=BIGINT},
      </if>
      <if test="record.startPointY != null">
        start_point_y = #{record.startPointY,jdbcType=BIGINT},
      </if>
      <if test="record.width != null">
        width = #{record.width,jdbcType=BIGINT},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=BIGINT},
      </if>
      <if test="record.faultType != null">
        fault_type = #{record.faultType,jdbcType=INTEGER},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operPerson != null">
        oper_person = #{record.operPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fault_info
    set id = #{record.id,jdbcType=VARCHAR},
      sheet_id = #{record.sheetId,jdbcType=VARCHAR},
      image_id = #{record.imageId,jdbcType=VARCHAR},
      start_point_x = #{record.startPointX,jdbcType=BIGINT},
      start_point_y = #{record.startPointY,jdbcType=BIGINT},
      width = #{record.width,jdbcType=BIGINT},
      height = #{record.height,jdbcType=BIGINT},
      fault_type = #{record.faultType,jdbcType=INTEGER},
      data_type = #{record.dataType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      oper_person = #{record.operPerson,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.corun.faultcheck.fault.check.model.FaultInfo">
    update fault_info
    <set>
      <if test="sheetId != null">
        sheet_id = #{sheetId,jdbcType=VARCHAR},
      </if>
      <if test="imageId != null">
        image_id = #{imageId,jdbcType=VARCHAR},
      </if>
      <if test="startPointX != null">
        start_point_x = #{startPointX,jdbcType=BIGINT},
      </if>
      <if test="startPointY != null">
        start_point_y = #{startPointY,jdbcType=BIGINT},
      </if>
      <if test="width != null">
        width = #{width,jdbcType=BIGINT},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=BIGINT},
      </if>
      <if test="faultType != null">
        fault_type = #{faultType,jdbcType=INTEGER},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operPerson != null">
        oper_person = #{operPerson,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.corun.faultcheck.fault.check.model.FaultInfo">
    update fault_info
    set sheet_id = #{sheetId,jdbcType=VARCHAR},
      image_id = #{imageId,jdbcType=VARCHAR},
      start_point_x = #{startPointX,jdbcType=BIGINT},
      start_point_y = #{startPointY,jdbcType=BIGINT},
      width = #{width,jdbcType=BIGINT},
      height = #{height,jdbcType=BIGINT},
      fault_type = #{faultType,jdbcType=INTEGER},
      data_type = #{dataType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      oper_person = #{operPerson,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>